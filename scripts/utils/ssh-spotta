#!/usr/bin/env python3

import sys
import os

PRODUCTION_CONNETIONS = {
	'fmp': 'ssh fmp@185.144.225.141',
	'viewer1': 'ssh viewer@185.144.225.149',
	'viewer2': 'ssh viewer@185.144.225.150',
	'viewer3': 'ssh viewer@185.144.225.151',
	'website1': 'ssh website@185.144.225.152',
	'website2': 'ssh website@185.144.225.153',
	'api1': 'ssh api@185.144.225.142',
	'api2': 'ssh api@185.144.225.143',
}

TESTING_CONNECTIONS = {
	'fmp': 'ssh fmptest@185.144.225.141',
	'viewer': 'ssh viewertest@185.144.225.149',
	'website': 'ssh websitetest@185.144.225.152',
	'api': 'ssh apitest@185.144.225.142',
}

# Check what list to use.
if 'testing' in sys.argv:
	useList=TESTING_CONNECTIONS
elif 'production' in sys.argv:
	useList=PRODUCTION_CONNETIONS
elif 1 not in sys.argv:
	askUser = input("Choose: production or testing? ")
	if askUser == 'testing':
		print('awnser: ' + askUser)
		useList=TESTING_CONNECTIONS
	else:
		useList=PRODUCTION_CONNETIONS
		if askUser == 'production':
			print('awnser: production\n')
		else:
			print('auto awnser: production\n')

def AskConnection():
	print('Choose connection:')
	for key in useList.keys():
		print('- '+ str(key))

	print('\nOr type "exit" to stop.\n')

	askedUserForConnection = input("Enter connection key? ")

	## Stop asking exit script
	if askedUserForConnection == 'exit':
		return

	if askedUserForConnection not in useList:
		print('Invalid chosen connection')
		return AskConnection()

	print("\nSetup connection....\n")
	os.system(useList.get(askedUserForConnection))

AskConnection()