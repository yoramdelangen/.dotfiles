# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
set-option -g history-limit 50000
set-option -sg escape-time 10
set-option -g focus-events on

bind-key C-a send-prefix

# change split screen bindings
bind-key -T prefix \\ split-window -h -c "#{pane_current_path}" # Split panes horizontal
bind-key -T prefix - split-window -v -c "#{pane_current_path}" # Split panes vertically
bind c new-window -c "#{pane_current_path}"
bind -n M-Enter new-window -c "#{pane_current_path}"
bind x kill-pane \; display "Closed pane"

unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded"

setw -g mode-keys vi
setw -g mouse on

# Start window numbering at 1
set -g base-index 1
set -g default-terminal "tmux-256color"

#setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
#setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

set -g status-position bottom
# set -g status-bg default
#set -g status-fg colour137
#set -g status-left ''
#set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
#set -g status-right-length 50
#set -g status-left-length 20

unbind l
# Switching panes VIM style!
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key -n C-S-h swap-window -t -1
bind-key -n C-S-l swap-window -t +1

# resize panes more easily
bind < resize-pane -L 10
bind > resize-pane -R 10
# bind - resize-pane -D 10
# bind + resize-pane -U 10

## COLORSCHEME: gruvbox dark (medium)
set-option -g status "on"

# default statusbar color
# set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
set-option -g status-style bg=default

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]"
set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]#[bg=colour239,fg=colour246] %Y-%m-%d #[bg=colour239,fg=colour248,nobold,noitalics,nounderscore]#[bg=colour248,fg=colour237] %H:%M "

set-window-option -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]#[bg=colour214,fg=colour239] #I #[bg=colour214,fg=colour239,bold]#W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]"
set-window-option -g window-status-format "#[bg=colour239,fg=colour237,noitalics]#[bg=colour239,fg=colour223] #I #[bg=colour239,fg=colour223]#W #[bg=colour237,fg=colour239,noitalics]"

## Helper keybindings for neovim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
bind-key -n C-\   if-shell  "$is_vim"  "send-keys C-\\"  "select-pane -l"
