env:
  TERM: xterm-256color

window:
  padding:
    x: 30
    y: 30

  dynamic_padding: false
  decorations: buttonless

# Font configuration
font:
  normal:
    family: Fixedsys Excelsior

  # Bold font face
  #bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold

  # Italic font face
  #italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Italic

  # Bold italic font face
  #bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold Italic

  # Point size
  size: 16.0
  offset:
    x: 0
    y: 2
  use_thin_strokes: true

background_opacity: 0.95

##########################
# Colors (Gruvbox dark)
colors:
  primary:
    # hard contrast background - '#1d2021'
    background:        &gruvbox_dark_bg '#282828'
    # soft contrast background - '#32302f'
    foreground:        '#ebdbb2'
    bright_foreground: '#fbf1c7'
    dim_foreground:    '#a89984'
  cursor:
    text:   CellBackground
    cursor: CellForeground
  vi_mode_cursor:
    text:   CellBackground
    cursor: CellForeground
  # search:
  #   matches:
  #     foreground: '#000000'
  #     background: '#ffffff'
  #   focused_match:
  #    foreground: CellBackground
  #    background: CellForeground
  #   bar:
  #     background: ''
  #     foreground: ''
  # line_indicator:
  #   foreground: None
  #   background: None
  selection:
    text:       CellBackground
    background: CellForeground
  bright:
    black:   '#928374'
    red:     '#fb4934'
    green:   '#b8bb26'
    yellow:  '#fabd2f'
    blue:    '#83a598'
    magenta: '#d3869b'
    cyan:    '#8ec07c'
    white:   '#ebdbb2'
  normal:
    black:   *gruvbox_dark_bg
    red:     '#cc241d'
    green:   '#98971a'
    yellow:  '#d79921'
    blue:    '#458588'
    magenta: '#b16286'
    cyan:    '#689d6a'
    white:   '#a89984'
  dim:
    black:   '#32302f'
    red:     '#9d0006'
    green:   '#79740e'
    yellow:  '#b57614'
    blue:    '#076678'
    magenta: '#8f3f71'
    cyan:    '#427b58'
    white:   '#928374'


#selection:
  #semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Live config reload (changes require restart)
live_config_reload: true

shell:
  program: /usr/local/bin/fish
  args:
    - --login

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

hints:
  enabled:
    - regex: '([0-9a-f]{12,128})|([[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3})'
      action: Copy
      post_processing: false
      mouse:
        mods: Control|Command
      binding:
        key: U
        mods: Control|Shift

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
key_bindings:
  - { key: Comma,     mods: Command,      command: {program: "sh", args: ["-c","open ~/.config/alacritty/alacritty.yml"]} }
  - { key: N,         mods: Command,      action: SpawnNewInstance       }
  - { key: Space,     mods: Alt,          chars: " "                     }
  - { key: Back, mods: Super, chars: "\x15" } # delete word/line
  - { key: Left,     mods: Alt,     chars: "\x1bb"                       } # one word left
  - { key: Right,    mods: Alt,     chars: "\x1bf"                       } # one word right
  - { key: Left,     mods: Command, chars: "\x1bOH",   mode: AppCursor   } # Home
  - { key: Right,    mods: Command, chars: "\x1bOF",   mode: AppCursor   } # End:
  - { key: Slash,   mods: Control,       chars: "\x1f" }
  # Terminal actions
  - { key: Key0,   mods: Command,            action: ResetFontSize    }
  - { key: Space,     mods: Alt,          chars: " "                     }
  - { key: Plus,    mods: Command,            action: IncreaseFontSize }
  - { key: Back, mods: Super, chars: "\x15" } # delete word/line
  - { key: Minus,  mods: Command,            action: DecreaseFontSize }
  # Pass through
  - { key: PageUp,                             action: ScrollPageUp     }
  - { key: PageUp,      mode: Alt,             chars: "\x1B[5~"         }
  - { key: PageUp,      mods: Shift,           chars: "\x1B[5~"         }
  - { key: PageDown,                           action: ScrollPageDown   }
  - { key: PageDown,    mode: Alt,             chars: "\x1B[6~"         }
  - { key: PageDown,    mods: Shift,           chars: "\x1B[6~"         }
  - { key: Home,                               action: ScrollToTop      }
  - { key: Home,        mode: Alt,             chars: "\x1BOH"          }
  - { key: Home,        mods: Shift,           chars: "\x1B[H"          }
  - { key: End,                                action: ScrollToBottom   }
  - { key: End,         mode: Alt,             chars: "\x1BOF"          }
  - { key: End,         mods: Shift,           chars: "\x1B[F"          }
  - { key: Tab,         mods: Alt,             chars: "\x1B\t"          }
  - { key: Tab,         mods: Alt|Shift,       chars: "\x1B\x1B[Z"      }
  - { key: Back,                               chars: "\x7F"            }
  - { key: Back,        mods: Alt,             chars: "\x1B\x7F"        }
  - { key: Back,        mods: Alt|Shift,       chars: "\x1B\x08"        }
  - { key: Space,       mods: Control,         chars: "\x00"            }
  - { key: Space,       mods: Alt,             chars: "\x20"            }
  - { key: Left,        mods: Alt,             chars: "\x1Bb"           }
  - { key: Left,        mods: Alt|Shift,       chars: "\x1B\x1B[D"      }
  - { key: Right,       mods: Alt,             chars: "\x1Bf"           }
  - { key: Right,       mods: Alt|Shift,       chars: "\x1B\x1B[C"      }
  - { key: Down,        mods: Alt,             chars: "\x1B\x1B[B"      }
  - { key: Down,        mods: Alt|Shift,       chars: "\x1B\x1B[B"      }
  - { key: Up,          mods: Alt,             chars: "\x1B\x1B[A"      }
  - { key: Up,          mods: Alt|Shift,       chars: "\x1B\x1B[A"      }
  - { key: A,           mods: Alt,             chars: "\x1Ba"           }
  - { key: A,           mods: Alt|Shift,       chars: "\x1BA"           }
  - { key: B,           mods: Alt,             chars: "\x1Bb"           }
  - { key: B,           mods: Alt|Shift,       chars: "\x1BB"           }
  - { key: C,           mods: Alt,             chars: "\x1Bc"           }
  - { key: C,           mods: Alt|Shift,       chars: "\x1BC"           }
  - { key: D,           mods: Alt,             chars: "\x1Bd"           }
  - { key: D,           mods: Alt|Shift,       chars: "\x1BD"           }
  - { key: E,           mods: Alt,             chars: "\x1Be"           }
  - { key: E,           mods: Alt|Shift,       chars: "\x1BE"           }
  - { key: F,           mods: Alt,             chars: "\x1Bf"           }
  - { key: F,           mods: Alt|Shift,       chars: "\x1BF"           }
  - { key: G,           mods: Alt,             chars: "\x1Bg"           }
  - { key: G,           mods: Alt|Shift,       chars: "\x1BG"           }
  - { key: H,           mods: Alt,             chars: "\x1Bh"           }
  - { key: H,           mods: Alt|Shift,       chars: "\x1BH"           }
  - { key: I,           mods: Alt,             chars: "\x1Bi"           }
  - { key: I,           mods: Alt|Shift,       chars: "\x1BI"           }
  - { key: J,           mods: Alt,             chars: "\x1Bj"           }
  - { key: J,           mods: Alt|Shift,       chars: "\x1BJ"           }
  - { key: K,           mods: Alt,             chars: "\x1Bk"           }
  - { key: K,           mods: Alt|Shift,       chars: "\x1BK"           }
  - { key: L,           mods: Alt,             chars: "\x1Bl"           }
  - { key: L,           mods: Alt|Shift,       chars: "\x1BL"           }
  - { key: M,           mods: Alt,             chars: "\x1Bm"           }
  - { key: M,           mods: Alt|Shift,       chars: "\x1BM"           }
  - { key: N,           mods: Alt,             chars: "\x1Bn"           }
  - { key: N,           mods: Alt|Shift,       chars: "\x1BN"           }
  - { key: O,           mods: Alt,             chars: "\x1Bo"           }
  - { key: O,           mods: Alt|Shift,       chars: "\x1BO"           }
  - { key: P,           mods: Alt,             chars: "\x1Bp"           }
  - { key: P,           mods: Alt|Shift,       chars: "\x1BP"           }
  - { key: Q,           mods: Alt,             chars: "\x1Bq"           }
  - { key: Q,           mods: Alt|Shift,       chars: "\x1BQ"           }
  - { key: R,           mods: Alt,             chars: "\x1Br"           }
  - { key: R,           mods: Alt|Shift,       chars: "\x1BR"           }
  - { key: S,           mods: Alt,             chars: "\x1Bs"           }
  - { key: S,           mods: Alt|Shift,       chars: "\x1BS"           }
  - { key: T,           mods: Alt,             chars: "\x1Bt"           }
  - { key: T,           mods: Alt|Shift,       chars: "\x1BT"           }
  - { key: U,           mods: Alt,             chars: "\x1Bu"           }
  - { key: U,           mods: Alt|Shift,       chars: "\x1BU"           }
  - { key: V,           mods: Alt,             chars: "\x1Bv"           }
  - { key: V,           mods: Alt|Shift,       chars: "\x1BV"           }
  - { key: W,           mods: Alt,             chars: "\x1Bw"           }
  - { key: W,           mods: Alt|Shift,       chars: "\x1BW"           }
  - { key: X,           mods: Alt,             chars: "\x1Bx"           }
  - { key: X,           mods: Alt|Shift,       chars: "\x1BX"           }
  - { key: Y,           mods: Alt,             chars: "\x1By"           }
  - { key: Y,           mods: Alt|Shift,       chars: "\x1BY"           }
  - { key: Z,           mods: Alt,             chars: "\x1Bz"           }
  - { key: Z,           mods: Alt|Shift,       chars: "\x1BZ"           }
  - { key: Key1,        mods: Alt,             chars: "\x1B1"           }
  - { key: Key1,        mods: Alt|Shift,       chars: "\x1B!"           }
  - { key: Key2,        mods: Alt,             chars: "\x1B2"           }
  - { key: Key2,        mods: Alt|Shift,       chars: "\x1B#"           }
  - { key: Key3,        mods: Alt,             chars: "\x1B3"           }
  - { key: Key3,        mods: Alt|Shift,       chars: "\x1B#"           }
  - { key: Key4,        mods: Alt,             chars: "\x1B4"           }
  - { key: Key4,        mods: Alt|Shift,       chars: "\x1B$"           }
  - { key: Key5,        mods: Alt,             chars: "\x1B5"           }
  - { key: Key5,        mods: Alt|Shift,       chars: "\x1B%"           }
  - { key: Key6,        mods: Alt,             chars: "\x1B6"           }
  - { key: Key6,        mods: Alt|Shift,       chars: "\x1B^"           }
  - { key: Key7,        mods: Alt,             chars: "\x1B7"           }
  - { key: Key7,        mods: Alt|Shift,       chars: "\x1B&"           }
  - { key: Key8,        mods: Alt,             chars: "\x1B8"           }
  - { key: Key8,        mods: Alt|Shift,       chars: "\x1B*"           }
  - { key: Key9,        mods: Alt,             chars: "\x1B9"           }
  - { key: Key9,        mods: Alt|Shift,       chars: "\x1B("           }
  - { key: Key0,        mods: Alt,             chars: "\x1B0"           }
  - { key: Key0,        mods: Alt|Shift,       chars: "\x1B)"           }
  - { key: Minus,       mods: Alt,             chars: "\x1B-"           }
  - { key: Minus,       mods: Alt|Shift,       chars: "\x1B_"           }
  - { key: Equals,      mods: Alt,             chars: "\x1B="           }
  - { key: Equals,      mods: Alt|Shift,       chars: "\x1B+"           }
  - { key: LBracket,    mods: Alt,             chars: "\x1B["           }
  - { key: LBracket,    mods: Alt|Shift,       chars: "\x1B{"           }
  - { key: RBracket,    mods: Alt,             chars: "\x1B]"           }
  - { key: RBracket,    mods: Alt|Shift,       chars: "\x1B}"           }
  - { key: Backslash,   mods: Alt,             chars: "\x1B\\"          }
  - { key: Backslash,   mods: Alt|Shift,       chars: "\x1B|"           }
  - { key: Semicolon,   mods: Alt,             chars: "\x1B;"           }
  - { key: Semicolon,   mods: Alt|Shift,       chars: "\x1B:"           }
  - { key: Apostrophe,  mods: Alt,             chars: "\x1B'"           }
  - { key: Apostrophe,  mods: Alt|Shift,       chars: "\x1B\""          }
  - { key: Comma,       mods: Alt,             chars: "\x1B,"           }
  - { key: Comma,       mods: Alt|Shift,       chars: "\x1B<"           }
  - { key: Period,      mods: Alt,             chars: "\x1B."           }
  - { key: Period,      mods: Alt|Shift,       chars: "\x1B>"           }
  - { key: Slash,       mods: Alt,             chars: "\x1B/"           }
  - { key: Slash,       mods: Alt|Shift,       chars: "\x1B?"           }
  - { key: Grave,       mods: Alt,             chars: "\x1B`"           }
  - { key: Grave,       mods: Alt|Shift,       chars: "\x1B~"           }

  # Passing all Command key combinations
  # More ASCII -> https://theasciicode.com.ar/
  - { key: D,     mods: Command,       chars: "\x06\x76" }
  - { key: D,     mods: Command|Shift, chars: "\x06\x73" }
  - { key: C,     mods: Command,       chars: "\x06\x99" }
  - { key: C,     mods: Command|Shift, chars: "\x06\x67" }
  - { key: P,     mods: Command,       chars: "\x06\x112" }
  - { key: P,     mods: Command|Shift, chars: "\x06\x88" }
  - { key: W,     mods: Command,       chars: "\x06\x78" }
  - { key: H,     mods: Command,       chars: "\x06\x68" }
  - { key: J,     mods: Command,       chars: "\x06\x6a" }
  - { key: K,     mods: Command,       chars: "\x06\x6b" }
  - { key: L,     mods: Command,       chars: "\x06\x6c" }
  - { key: T,     mods: Command,       chars: "\x06\x63" }
  - { key: Key1,  mods: Command,       chars: "\x06\x31" }
  - { key: Key2,  mods: Command,       chars: "\x06\x32" }
  - { key: Key3,  mods: Command,       chars: "\x06\x33" }
  - { key: Key4,  mods: Command,       chars: "\x06\x34" }
  - { key: Key5,  mods: Command,       chars: "\x06\x35" }
  - { key: Key6,  mods: Command,       chars: "\x06\x36" }
  - { key: Key7,  mods: Command,       chars: "\x06\x37" }
  - { key: Key8,  mods: Command,       chars: "\x06\x38" }
  - { key: Key9,  mods: Command,       chars: "\x06\x39" }
  - { key: Left,  mods: Command,       chars: "\x06\x48" }
  - { key: Down,  mods: Command,       chars: "\x06\x4a" }
  - { key: Up,    mods: Command,       chars: "\x06\x4b" }
  - { key: Right, mods: Command,       chars: "\x06\x4c" }

